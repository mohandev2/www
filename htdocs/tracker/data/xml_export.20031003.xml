<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE project_export SYSTEM "http://sourceforge.net/export/sf_project_export_0.1.dtd">
<project_export>

<artifacts>

<artifact>
	<field name="artifact_id">808060</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Automated rpm build</field>
	<field name="open_date">1063821877</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">for 0.3 we should have rpms as a release format.  Work
needs to be done to ensure this happens</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064966848</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

This work is done now.

If anyone finds any bugs or issues, please files them and I
will work on them.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064966848</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064966848</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064966848</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">808046</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Persistance for Domain SEL</field>
	<field name="open_date">1063820458</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">0.4</field>
	<field name="details">We need a way to ensure persistance for Domain Level
SEL between restarts of an OpenHPI application.  This
will probably involve a simple text database on disk.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064966774</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

This is still an open issue for discussion.

My analysis has deemed that persisting SEL in openhpi today
would be worthless due to the fact that data is only valid
per session as a side effect of the nature of the discovery
process.

Basically, RESOURCE_0 in one session might be different to
another.

I will be looking more into it.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064966774</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063864512</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">795380</field>
	<field user_id="744603" name="submitted_by">djudkovi</field>
	<field user_id="744603" name="assigned_to">djudkovi</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Move IP Address of Remote Machine to 'openhpi.conf'</field>
	<field name="open_date">1061907635</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Remoting Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Move IP Address of Remote Machine to 'openhpi.conf'.

Presently the IP addrss of the remote machine the
remote plug-in attaches to is hard-coded in
'net_msg.h';

&#34;#define SERV_HOST_ADDR  &#34;127.0.0.1&#34; /* host addr for
server */&#34;.

It is set to loopback.  This address shall
be moved into the configuration file, 'openhpi.conf'.

example:

plugin  libtext_remote

handler libtext_remote {
        name = &#34;IP ADDRESS&#34;
        addr = &#34;293.67.92.233&#34;
}
</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064966604</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

This is done and included in openhpi-0.2 release.
It's now the standard way to pass arguments to plug-ins.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064966604</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064966603</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">758104</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">8</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">define function doc standard</field>
	<field name="open_date">1056135608</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Documentation</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">We need to decide upon a documentation standard for
functions within our code.  Using the gnome style docs
would be easy, as there is emacs elisp code to do it
already.  Other formats could be used as well.

Sean volunteers to provide elisp code for whatever
format is eventually choosen.  The vim users will have
to suffer. ;)</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064966560</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

I submitted an email to the mailing list standarizing on
gnome-doc and provided a script and macro changes for VIM.

Sean can be contacted for elisp-emacs support.

For additional info, search the mailing list archive...email
dated:9/18/2003 titled: More on coding style and guidelines.</field>
</message>

<message>
		<field name="adddate">1063813716</field>
		<field name="user_name">sdague</field>
		<field name="body">Logged In: YES 
user_id=21949

Tariq started the conversation on the mailing list, so I'm
assigning this to him.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064966560</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064966560</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813716</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">priority</field>
		<field name="old_value">5</field>
		<field name="entrydate">1063813716</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813716</field>
		<field name="mod_by">sdague</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">758098</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Pending</field>
	<field name="resolution">None</field>
	<field name="summary">add openhpi.conf to build system</field>
	<field name="open_date">1056135200</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">None</field>
	<field name="details">We need to add a stub openhpi.conf to the build system
which will be installed during make install.  The final
location (after installation) needs to be
/etc/openhpi/openhpi.conf</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064966313</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

This was added via installing openhpi.conf.example in
/etc/openhpi.
If this is good enough for this request, ping me and I'll
close it.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064966313</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064966313</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064966313</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810947</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="867483" name="assigned_to">guorj</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator file hierarchy structure spec</field>
	<field name="open_date">1064286563</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">Future</field>
	<field name="details">Simulator file hierarchy structure spec</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064966806</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064307720</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064305440</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">813259</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Run openhpi from CVS rep</field>
	<field name="open_date">1064607212</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">Future</field>
	<field name="details">It would be nice to be able to run an openhpi test app
like list_resources from local cvs repository without
having to install in /usr/local/ first.

Not sure what is required for this, but I'll investigate.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064656961</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

I add a generated rt-env.sh into CVS. You should type '.
rt-env.sh' and all subsequent list_resources and other
command can run</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064656961</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064656961</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">813455</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Build on splitted directory</field>
	<field name="open_date">1064654147</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">openhpi should support build on other directory.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064654333</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064654333</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064654297</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">808042</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Setting Entity Path Root</field>
	<field name="open_date">1063820140</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Each plugin needs the ability to have it's entity path
root specified by the infrastructure so that it knows
where it fits in the overall entity schema.

i.e. 

handler ipmi {
    ...
    entity_root = &#34;{CHASSIS,1}&#34;
}</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064648914</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">808052</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Support Multiple instances</field>
	<field name="open_date">1063821034</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Dummy Plugin</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The dummy plugin can only support one handler at the
moment.  It should be made to be able to instantiate as
many handlers as required for testing purposes.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064648862</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Currently there are two virtual nodes in dummy, you can open
each node by 'addr' attribute. BTW you can also open the
same node times. Take a look at  openhpi.conf.example.</field>
</message>

<message>
		<field name="adddate">1063978244</field>
		<field name="user_name">sdague</field>
		<field name="body">Logged In: YES 
user_id=21949

Not quite:

What would be nice would be able to use the dummy plugin
multiple times.  This could be done by loading the same
resources with different entity paths.

i.e.

handler dummy {
     entity_root = &#34;{CHASSIS,0}&#34;
     ...
}
handler dummy {
     entity_root = &#34;{CHASSIS,1}&#34;
     ...
}

Now you could use dummy to test much more than the single
static resource path.</field>
</message>

<message>
		<field name="adddate">1063961260</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

I've check code into CVS. Resources reported by latter
instance are thought as duplicated resources and are ignored
by infratructure. Is it hehavior you want? </field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064648862</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1063978244</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063961260</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063864419</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">812848</field>
	<field user_id="744603" name="submitted_by">djudkovi</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Plug-in to Infrastructure Interface</field>
	<field name="open_date">1064541826</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Documentation</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Plug-in to Infrastructure Interface requires
documentation. 

Suggest beginning by documenting the event queue
mechanism,  'oh_event' types,  and the 'get_events()'
event/message &#34;pump&#34;.</field>
</artifact>
<artifact>
	<field name="artifact_id">810952</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator FHS monitor tool</field>
	<field name="open_date">1064286903</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Simulator FHS monitor tool</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064307700</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810951</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator FHS dynamic maintaince tool</field>
	<field name="open_date">1064286871</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Simulator FHS dynamic maintaince tool</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064305536</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810950</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator FHS setup tool</field>
	<field name="open_date">1064286781</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Simulator FHS setup tool</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064305505</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810949</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator plug-in</field>
	<field name="open_date">1064286703</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Simulator plug-in</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064305481</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810948</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Simulator configure file spec</field>
	<field name="open_date">1064286644</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Simulator Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Simulator configure file spec</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1064305460</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810945</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="867483" name="assigned_to">guorj</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">conformance test specification</field>
	<field name="open_date">1064286389</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Conformance Test Suite</field>
	<field name="artifact_group_id">None</field>
	<field name="details">We need a conformance test specification before getting
hands dirty in code.</field>
</artifact>
<artifact>
	<field name="artifact_id">784920</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="660960" name="assigned_to">renierm</field>
	<field name="priority">6</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">enhance configuration file</field>
	<field name="open_date">1060280270</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The configuration file should be enhanced to support
more complex name = value type stanzas for handlers.

e.g.

handler libipmi {
        interface = lan
        ipaddr = xxx   
        port = yyy
        auth_type = zzz
        auth_level = hhh
        username = qqq  
        password = rrr
}       

this will require that the handler open call takes some
sort of hash structure instead of just name/addr pairs,
but that shouldn't be that bad.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064244050</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064244049</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1062700735</field>
		<field name="mod_by">renierm</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1062700735</field>
		<field name="mod_by">renierm</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">758105</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Release Docs</field>
	<field name="open_date">1056135679</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Documentation</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">There is need for a document on release steps for the
software.

Assigned to Tariq, as he is looking at the release
process now.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1063813753</field>
		<field name="user_name">sdague</field>
		<field name="body">Logged In: YES 
user_id=21949

Would be nice to have this written down and on the website
before the  next release</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813753</field>
		<field name="mod_by">sdague</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">807912</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="744603" name="assigned_to">djudkovi</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">make openhpi thread safe</field>
	<field name="open_date">1063813950</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Investigate ways to make OpenHPI thread safe.  David is
in progress on this now.</field>
</artifact>
<artifact>
	<field name="artifact_id">807928</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Add Support for Multiple Domains</field>
	<field name="open_date">1063814628</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">Future</field>
	<field name="details">We need extensible site configurable support for
multiple domains.  This will be addressed sometime in
early 2004.</field>
</artifact>
<artifact>
	<field name="artifact_id">808051</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Persistance mechanism for User Updateable Fields</field>
	<field name="open_date">1063820955</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenHPI base library</field>
	<field name="artifact_group_id">0.4</field>
	<field name="details">User settable fields within HPI aren't persistant
across client restarts.  This needs to be changed.  The
solution will probably be similar to the persistant
Domain SEL solution.</field>
</artifact>
<artifact>
	<field name="artifact_id">808059</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">IPMI: SEL support</field>
	<field name="open_date">1063821694</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenIPMI Plugin</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">SEL support for the IPMI plugin</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1063821743</field>
		<field name="mod_by">sdague</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">808053</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">HLD of OpenHPI Plugin Interface</field>
	<field name="open_date">1063821111</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Documentation</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">We need a chapter of the HLD doc on the Plugin Interface</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1063864577</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

I think it should be LLD. I can take it if no others</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063864577</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">795391</field>
	<field user_id="744603" name="submitted_by">djudkovi</field>
	<field user_id="744603" name="assigned_to">djudkovi</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Dynamically Build DiscoverResources response from 'openhpid'</field>
	<field name="open_date">1061908604</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Remoting Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">The length of the reponse response message from
'openhpid' to a 'DISCOVER_RESOURCES' resources request
message from plug-in 'text_remote' shall be dynamicaly
allocate at the time of request.

Presently;

typedef struct {
        NETWORK_HDR_STR header;
        int error;
        int num_resource_events;
        struct oh_event oh_event_arry[3];
} DISCOVER_RESOURCES_MSG_STR;


The element 'oh_event_arry' is statically set to three.
 This should be dynamically allocated based on the
number of entries found in the RPT of the remote machine.

Propose something like:


typedef struct {
        NETWORK_HDR_STR header;
        int error;
        int num_resource_events;
        struct oh_event oh_event_arry[]; &#60;------
variable length
} DISCOVER_RESOURCES_MSG_STR;

Of course some limit should be placed on the number of
entries sent in a given message.  The absolute limit is
the depth of the socket buffer length in the TCP/IP
stack.  Probably should be set to something much less
than that.  Maybe 10 entries, which will still be a lot
of bytes.  More entries past that will need to be sent
in multiple response messages.  At which point another
element maybe needed indicating more repsonses on the
way and last response sent.

typedef struct {
        NETWORK_HDR_STR header;
        int error;
        int response_type;   &#60;---------------- add this 
        int num_resource_events;
        struct oh_event oh_event_arry[];
} DISCOVER_RESOURCES_MSG_STR;


enum Response_Type {FISRT, LAST, MORE};</field>
</artifact>
<artifact>
	<field name="artifact_id">783711</field>
	<field user_id="744603" name="submitted_by">djudkovi</field>
	<field user_id="660960" name="assigned_to">renierm</field>
	<field name="priority">1</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Pass alternate openhpi.conf file name and locatin on load</field>
	<field name="open_date">1060113496</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Dummy Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">When an app loads 'libopenhpi' via an arg or
environment variable specify an alternate location and
file name for 'openhpi.conf'.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1061496912</field>
		<field name="user_name">renierm</field>
		<field name="body">Logged In: YES 
user_id=660960

You can now specify the location of the conf file by using the 
OPENHPI_CONF environment variable (e.g export 
OPENHPI_CONF=/etc/openhpi/openhpi.conf). </field>
</message>

<message>
		<field name="adddate">1060116164</field>
		<field name="user_name">rustyl</field>
		<field name="body">Logged In: YES 
user_id=557513

I would also like this feature, but not because the default 
location is bad, but I would like to have the ability to run 
multiple OpenHPI applications with different configurations.

That would allow solutions like:
* A deamon runs with a configuration to pull data directly 
from local hardware 
* other applications run with the default configuration which 
is to use the HPI Remote plug-in which connects the the 
previously mentioned deamon

</field>
</message>

<message>
		<field name="adddate">1060114594</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

Is there an issue with the config file location currently?</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1061496912</field>
		<field name="mod_by">renierm</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1061496912</field>
		<field name="mod_by">renierm</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">21949</field>
		<field name="entrydate">1060116275</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">priority</field>
		<field name="old_value">5</field>
		<field name="entrydate">1060114594</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060114594</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">785149</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">1</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Show results step-by-step</field>
	<field name="open_date">1060312026</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Conformance Test Suite</field>
	<field name="artifact_group_id">None</field>
	<field name="details">runtest should show results step-by-step instead of
bulk showing after all run </field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060315259</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060315258</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">758101</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Forward Port OpenIPMI module</field>
	<field name="open_date">1056135430</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">OpenIPMI Plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">The OpenIPMI module is based on very back level
OpenIPMI code, and needs to be forward ported to the
latest OpenIPMI level.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1057109556</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">48732</field>
		<field name="entrydate">1057109556</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1057109556</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">785160</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">be distnct between DSEL or RSEL </field>
	<field name="open_date">1060313839</field>
	<field name="artifact_type">Feature Requests</field>
	<field name="category">Conformance Test Suite</field>
	<field name="artifact_group_id">None</field>
	<field name="details">DSEL and RSEL shoudl report slightly different fro easy
debug</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060315299</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060315298</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">816301</field>
	<field user_id="660960" name="submitted_by">renierm</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">Fixed</field>
	<field name="summary">dummy not compiling with gcc-3.3-23 in SuSE.</field>
	<field name="open_date">1065064394</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Dummy plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">I get this when running 'make' from the top level: 
 
dummy.c: In function `dummy_open': 
dummy.c:257: warning: comparison between signed and 
unsigned 
dummy.c: In function `dummy_discover_resources': 
dummy.c:315: warning: comparison between signed and 
unsigned 
 
We are using the Werror flag, so compilation stops. 
It could be that gcc-3.3 has stricter warning checks by 
default. The problem seems to be when comparing int to 
size_t (unsingned int). 
 
 
 </field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1065198446</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Renier, currently I'm not use gcc-3.3. Could you possibly
check it for sure that the bug is fixed?</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1065198446</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">814812</field>
	<field user_id="118691" name="submitted_by">tariqx</field>
	<field user_id="744603" name="assigned_to">djudkovi</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">text_remote breaks during rpm build</field>
	<field name="open_date">1064878291</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">If you check out the source fresh and run:
./Bigbuild
the make rpm
The test_remote plugin build breaks.

</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064878430</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

Added a fix to Makefile.am in text_remote directory.
Just added text_remote.h to SOURCES as follows:

libtext_remote_la_SOURCES       = text_remote.c
netwrk_connect.c proxy_objects.c text_remote.h

</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064878430</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064878430</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">815518</field>
	<field user_id="118691" name="submitted_by">tariqx</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">sysfs2hpi plugin doesn't work with libsysfs-0.2</field>
	<field name="open_date">1064965920</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">sysfs2hpi</field>
	<field name="artifact_group_id">None</field>
	<field name="details">The library for sysfs API has been changed and our
sysfs2hpi plugin no longer compiles.
</field>
</artifact>
<artifact>
	<field name="artifact_id">816365</field>
	<field user_id="660960" name="submitted_by">renierm</field>
	<field user_id="660960" name="assigned_to">renierm</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Inconsistent types warning with gcc-3.3.23</field>
	<field name="open_date">1065073838</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">None</field>
	<field name="details">I get inconsistent types warnings in sahpi.c and hpifru.c 
compiling with gcc-3.3-23. 
The warnings are all when doing comparisons from an int to 
an unsigned int or vice versa. 
I'm assigning this to myself. 
 
Renier. </field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1065073873</field>
		<field name="mod_by">renierm</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">816380</field>
	<field user_id="660960" name="submitted_by">renierm</field>
	<field user_id="660960" name="assigned_to">renierm</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">Numerous 'unused variable' warnings with gcc-3.3-23</field>
	<field name="open_date">1065075960</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">None</field>
	<field name="details">When compiling with gcc-3.3-23, I get numerous 'unused 
variable' warnings. The problem seems to be generally with 
the UUID_OH_ABI_V1 constant in oh_plugin.h as being the 
unused variable. 
Many c files include oh_plugin.h as a nested include because 
the include something like openhpi.h. Some of these files do 
not need to use that constant, but do use the oh_event 
struct defined in the same file, for example. 
With gcc3.3 in these cases, it's generating warnings. As far 
as the gcc man page says, Wunused is not on by default and 
we are not turning it on in our Makefile. However, the 
behavior seems to be that Wunused or Wunused-variable, 
to be more specific, is on by default in gcc-3.3. It may be a 
bug in the latest version of gcc. 
I have found that by adding -Wno-unused-variable to our 
Configure.in, the warning is suppressed and compilation is 
possible. I will be checking in a patch for this. 
 
Renier. </field>
	<field name="artifact_history">
<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">21949</field>
		<field name="entrydate">1065076006</field>
		<field name="mod_by">renierm</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">801290</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">7</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">list_resources hangs on dummy plugin</field>
	<field name="open_date">1062787044</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">None</field>
	<field name="details">list_resources hangs on the dummy plugin (and eats up
all the cpu in the process).  I think this is because
of the spin wait put in for IPMI support.  It would be
nice for list_resources to be working to test changes
as they go in. ;)</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1062983407</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Do you mean list_resource won't exit? It is just because
it's waitting for new resource.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064648632</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064648632</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">804262</field>
	<field user_id="839641" name="submitted_by">thkanne</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">7</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">saEventGet arguments Rdr or RptEntry can be NULL </field>
	<field name="open_date">1063271438</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The function saHpiEventGet does not handle the 
arguments NULL for Rdr and RptEntry as described in
SAI-HPI-A.01.01.
</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1063853371</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Applied Thomas' patch</field>
</message>

<message>
		<field name="adddate">1063853276</field>
		<field name="user_name">kxgao</field>
		<field name="body">Logged In: YES 
user_id=629363

Conformance test will pass all the cases, if the case need 
some condition but cannot cause by other API, for example 
no memory, hardware failure, etc, we will not make this test 
case.

Conformance test cannot confirm whether the pointer for 
RPT/RDR entry includes resource/rdr ID. So we cannot make 
this test case.</field>
</message>

<message>
		<field name="adddate">1063850552</field>
		<field name="user_name">kxgao</field>
		<field name="body">Logged In: YES 
user_id=629363

Add test cases :ev_009.</field>
</message>

<message>
		<field name="adddate">1063847781</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Thomas &#38; Kevin, could you write a test case in hpitest to
reproduce the bug ? I think it is a conformance bug</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064648591</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064648591</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">629363</field>
		<field name="entrydate">1063850552</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">21949</field>
		<field name="entrydate">1063847781</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813636</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">priority</field>
		<field name="old_value">5</field>
		<field name="entrydate">1063813636</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813636</field>
		<field name="mod_by">sdague</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">812854</field>
	<field user_id="744603" name="submitted_by">djudkovi</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">saHpiEventGet() Error Checking</field>
	<field name="open_date">1064543408</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">None</field>
	<field name="details">If 'saHpiEventGet()' is called with no prior call to      
       'saHpiSubscribe(session_id, SAHPI_TRUE)'  
the infrastructure falls into an endless loop calling
'get_events()'.

Within the function 'saHpiEventGet()' non of the
criteria for breaking out of,
        while (1) {
                int rv;
                
                rv = get_events();
                if (rv&#60;0) {
                        value = SA_ERR_HPI_UNKNOWN;
                        break;
                }
                
                if (session_has_event(s)) {
                        value = SA_OK;
                        break;
                }
                
                gettimeofday1(&#38;now);    
                if (now&#62;=end) {
                        value = SA_ERR_HPI_TIMEOUT;
                        break;
                }
        }
is meet.  This while loop never exits when in this test
case the dummy plug-in is supplying a user event that
should cause,

                 if (session_has_event(s)) {
                        value = SA_OK;
                        break;
                }

to break out.

Maybe just check to make sure Subscribe has been called
for this session,
              'saHpiSubscribe(session_id, SAHPI_TRUE)'



</field>
</artifact>
<artifact>
	<field name="artifact_id">811731</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">Fixed</field>
	<field name="summary">wrong dataformat for reading of discrete sensor.</field>
	<field name="open_date">1064407623</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">IPMI plugin</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Now in IPMI Plugin, The data format of discrete sensor 
can be RAW, but it should be changed to 
EVENT_STATE. </field>
	<field name="artifact_history">
<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064408515</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064408515</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">811742</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Deleted</field>
	<field name="resolution">Duplicate</field>
	<field name="summary">wrong dataformat for reading of discrete sensor.</field>
	<field name="open_date">1064408295</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">IPMI plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">Now in IPMI Plugin, The data format of discrete sensor 
can be RAW, but it should be changed to 
EVENT_STATE. </field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064408455</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064408454</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064408454</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">810741</field>
	<field user_id="21949" name="submitted_by">sdague</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">IPMI functionality not right on website</field>
	<field name="open_date">1064253505</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Web Site</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The functionality of the IPMI driver isn't up to date
on the website.  Everything is marked as broken.

Please edit openhpi-www/htdocs2/status/raw/ipmi to make
this up to date</field>
</artifact>
<artifact>
	<field name="artifact_id">783689</field>
	<field user_id="660960" name="submitted_by">renierm</field>
	<field user_id="21949" name="assigned_to">sdague</field>
	<field name="priority">8</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">configure is not checking for /usr/bin/pkgconfig</field>
	<field name="open_date">1060111528</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">It is possible to have autoconf, automake, openipmi, uuid, 
uuid-devel, e2fsprogs, e2fsprogs-devel, glib, and glib-devel 
installed and to pass configure successfully to then fail make. 
This happens if you don't have pkgconfig. configre will report an 
error, but will still generate the configuration files. It needs to 
work more like it does if it does not find uuid.h, where configure 
will stop completely and tell you what is missing. </field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1064001118</field>
		<field name="user_name">sdague</field>
		<field name="body">Logged In: YES 
user_id=21949

fixed in cvs</field>
</message>

<message>
		<field name="adddate">1060916990</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Sean, could you possibly fix the problem in configure.in?</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1064001118</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1064001118</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1064001118</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">priority</field>
		<field name="old_value">5</field>
		<field name="entrydate">1063813446</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813446</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">category_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813445</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060916990</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">786523</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Open</field>
	<field name="resolution">None</field>
	<field name="summary">CT el_005, el_006 doesn't pass</field>
	<field name="open_date">1060594294</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">Future</field>
	<field name="details">saHpiEventLogEntryDelete doesn't work properly.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1063813527</field>
		<field name="user_name">sdague</field>
		<field name="body">Logged In: YES 
user_id=21949

This needs to be fixed if we want to have a HPI 1.0 release.
  We can only certify against stable HPI releases, not errata.</field>
</message>

<message>
		<field name="adddate">1060652283</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

saHpiEventLogEntryDelete has been deleted by errata. </field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1063813527</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">3</field>
		<field name="entrydate">1063813527</field>
		<field name="mod_by">sdague</field>
</history>

<history>
		<field name="field_name">summary</field>
		<field name="old_value">CT el_006 doesn't pass</field>
		<field name="entrydate">1061351918</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060652283</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">800635</field>
	<field user_id="660960" name="submitted_by">renierm</field>
	<field user_id="660960" name="assigned_to">renierm</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Need to check the return of g_strdup</field>
	<field name="open_date">1062700517</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">None</field>
	<field name="artifact_group_id">None</field>
	<field name="details">g_strdup is used in several places. This mallocs memory to 
duplicate a string. Need to make sure that we are error checking 
the return of this call, since it returns NULL if it fails to malloc. </field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1062787679</field>
		<field name="user_name">renierm</field>
		<field name="body">Logged In: YES 
user_id=660960

Only needed changes in config.c </field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1062787679</field>
		<field name="mod_by">renierm</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1062787679</field>
		<field name="mod_by">renierm</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1062700559</field>
		<field name="mod_by">renierm</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">794532</field>
	<field user_id="839641" name="submitted_by">thkanne</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">ipmi plugin sensor_threshold_event bug</field>
	<field name="open_date">1061797058</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">IPMI plugin</field>
	<field name="artifact_group_id">None</field>
	<field name="details">sensor_threshold_event is called with cb_data = 0.
So using of cb_data results in a core dump.
Have a lock at sensor_discrete_event too.

</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1062983564</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Patch was applied, thanks, Thomas</field>
</message>

<message>
		<field name="adddate">1061823119</field>
		<field name="user_name">thkanne</field>
		<field name="body">Logged In: YES 
user_id=839641

I hope this trivial patch will fix the bug.
</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">1061823119</field>
		<field name="entrydate">1062983564</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1062983564</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061866943</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">category_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061866943</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">2</field>
		<field name="entrydate">1061866943</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">File Added</field>
		<field name="old_value">59732: patch1</field>
		<field name="entrydate">1061823119</field>
		<field name="mod_by">thkanne</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1061823119</field>
		<field name="mod_by">thkanne</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061823119</field>
		<field name="mod_by">thkanne</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1061823119</field>
		<field name="mod_by">thkanne</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">776518</field>
	<field user_id="602195" name="submitted_by">arcress</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">ResourcesDiscover doesn't work first time</field>
	<field name="open_date">1058993003</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">IPMI plugin</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">When running a 'typical' HPI utility (e.g. hpisel), it 
performs 
saHpiResourcesDiscover() then saHpiRptInfoGet()
expecting that the Discover will block until it truly has 
the RPT populated.
The OpenHPI ipmi plugin returns from the Discover 
without populating the RPT, so this is why the 
example/list_resources.c has to loop on the 
Discover/RptInfoGet until eventually the RPT is 
populated.

Action: Change ipmi plugin to block until Discover 
actually completes.

NOTE: In the attached hpisel.c, the #ifdef BUGGY loop 
is included as a workaround for this problem.</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1060768752</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

IMHO, It is not a design issue in OpenHPI or IPMI
plug-in. In fact, resource will be populated by IPMI plugin
after a
while when OpenIPMI finally detects them. Bascially,
resource discovery
is an async operation and you are hard to find how long you
should take.
Waiting 5 mins or 1 hour is not solution...

My suggestion is
1) OpenIPMI can report a special callback to indicate
completetion of
populating main BMC SDR so that the first call in
saHpiDiscovery can
wait for all resources in BMC being populated
2) Other resources will be populated to RPT by IPMI plug-in when
OpenIPMI find it. HPI application should call saHpiRptGetInfo
periodically to find update in RPT.</field>
</message>

<message>
		<field name="adddate">1060603978</field>
		<field name="user_name">arcress</field>
		<field name="body">Logged In: YES 
user_id=602195

Obviously it can't be closed without a fix to the library.
Even with the BUGGY workaround code, it only discovers 19 
out of 52 SDRs.  I'll attach the code from sensors.c (similar 
logic is in openhpi at util/hpisensor.c).  
Note that 99% of all resources are present at boot time, 
occasionally a resource is hot-plugged, so the asynchronous 
mechanism for discovery is going to be slow, at best.
Discovery should:
1) Find the IPMI devices (BMC, sometimes other controllers)
2) Loop on GetSDR until you have all of the current resources.
If a service wants to loop for hot-plugged resources it should 
call saHpiDiscover repeatedly, but one call to Discover should 
return the resources that are present at that point in time.
</field>
</message>

<message>
		<field name="adddate">1060580514</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

Currently OpenHPI uses OpenIPMI as underlayer. As we 
discussed in mailing list, asynchronous mechanism in current 
implementation might be better. Could you possibly give us 
more information or else close the bug?</field>
</message>

<message>
		<field name="adddate">1060346424</field>
		<field name="user_name">arcress</field>
		<field name="body">Logged In: YES 
user_id=602195

If hpisel runs ok without the #ifdef BUGGY code, then that 
would be success.  
Apparently the logic for Discovery needs to be significantly 
changed.  See sensor.c at http://panicsel.sourceforge.net for 
example code that finds all resources (SDRs) in an IPMI 1.5 
system.</field>
</message>

<message>
		<field name="adddate">1060321735</field>
		<field name="user_name">kxgao</field>
		<field name="body">Logged In: YES 
user_id=629363

We cannot know the exact time that discover actually 
completes. It is depends on OpenIPMI library.</field>
</message>

<message>
		<field name="adddate">1059098628</field>
		<field name="user_name">kxgao</field>
		<field name="body">Logged In: YES 
user_id=629363

IMHO It's work for me, discover in ipmi plugin will block 60 sec 
if there is no resource we found. 

Of cource, we should negotiate the wait time..</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1062984933</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1062984933</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061890131</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">629363</field>
		<field name="entrydate">1061889960</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">File Added</field>
		<field name="old_value">59791: ipmi_discover.patch</field>
		<field name="entrydate">1061866472</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">File Added</field>
		<field name="old_value">58378: sensor.c</field>
		<field name="entrydate">1060603978</field>
		<field name="mod_by">arcress</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1059098628</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">File Added</field>
		<field name="old_value">56665: hpisel.c</field>
		<field name="entrydate">1058993098</field>
		<field name="mod_by">arcress</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">787095</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Infrastructure should assign domain id instead of plug-in</field>
	<field name="open_date">1060651935</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Only infrastructure has the whole view to assign domain
id. It will cause conflicts that plug-in assigns domain id.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1061866182</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1061866182</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061285794</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">791679</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Trivial issue in event log conformance tests</field>
	<field name="open_date">1061350393</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">None</field>
	<field name="details">As discussied in mail list, saHpiEventLogEntryGet will
return error when empty event log is empty. Current CTs
will failed when event log is empty because they aren't
keep the condition in mind.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1061426779</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1061426779</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1061351777</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">773487</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Ignore the 1st event log entry</field>
	<field name="open_date">1058517373</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">File: src/safhpi.c
Function: saHpiEventLogEntryGet
Ln: 452

When user wants to get  the first entry, give the entry 
ID of the first entry, not SAHPI_OLDEST_ENTRY.
The function cannot find the entry. </field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1060656236</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

kevin, could you possibly give me a test code for this?</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060768793</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060768793</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">102</field>
		<field name="entrydate">1060671092</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060656236</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">788494</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">OpenHPI crash without saHpiDiscovery</field>
	<field name="open_date">1060830175</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">None</field>
	<field name="details">HPI app will carsh if it call saHpiRptEntryGet without
calling saHpiDiscovery</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060917019</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060917019</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060910319</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">785119</field>
	<field user_id="48732" name="submitted_by">yzhuang</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">el_004 doesn't conform spec</field>
	<field name="open_date">1060306829</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">saHpiEventLogEntryAdd should add the entry as NEWEST 
entry without concerning EntryId value in input EvtEntry</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060579748</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060579748</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060318908</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060306875</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">785188</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Disable eventlog generate before add new eventlog entry</field>
	<field name="open_date">1060320444</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">file: el_004
Because conformance test will get the newest entry 
after add a new entry. So before add entry eventlog 
should disable the set event log state.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060579585</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060579585</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060322092</field>
		<field name="mod_by">yzhuang</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">771974</field>
	<field user_id="100" name="submitted_by">nobody</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Lack support for resource level SEL</field>
	<field name="open_date">1058312531</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">None</field>
	<field name="details">The HPI specification calls for both a domain level
System Event Log (SEL) and a resource level SEL.  The
current implementation can only handle domain level SEL
(i.e. the saHpiEventLog*() functions when a ResourceId
of  SAHPI_DOMAIN_CONTROLLER_ID is used.)</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1058517345</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

I'm working towards this</field>
</message>

<message>
		<field name="adddate">1058516811</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

I'm working towards this</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060579555</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060579555</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060306375</field>
		<field name="mod_by">yzhuang</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1058516827</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">740834</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">error on open an invalid domain.</field>
	<field name="open_date">1053479331</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">None</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The conformance test suite sm_002 was failed.

saHpiSessionOpen(SAHPI_IN SaHpiDomainIdT, 
DomainId,..)
If no Domain matching the specified domain ID exsist, 
SA_ERR_HPI_INVALID_DOMAIN is returned.

But there is no checking about unspecified domain, so 
no return value of SA_ERR_HPI_INVALID_DOMAIN.
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1054178580</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1054178580</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">757648</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Wrong return value in reset control test suite.</field>
	<field name="open_date">1056078457</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">rs_001/002/003

if (val == SA_ERR_HPI_INVALID) //The domain has no 
reset control
should be changed to 
if (val == SA_ERR_HPI_INVALID_CMD) //The resource 
has no reset control
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1056078502</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1056078502</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1056078502</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">757646</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">7</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Watch dog timer test issue.</field>
	<field name="open_date">1056078109</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Init value should not be 0,
Cannot compare the old value and new value. just 
because present value will change during the process.
After set the old value, Reset watchdogtimer will cause 
system reboot..</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1056078256</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1056078256</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1056078256</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">745314</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Cannot init HPI after fina the HPI.</field>
	<field name="open_date">1054178805</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">None</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Use function as follow:

saHpiInitialize();
saHpiFinalize();
saHpiInitialize()

Then second init will have error.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1054179438</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1054179438</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">768948</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">API saHpiSensorEventEnablesSet error.</field>
	<field name="open_date">1057824893</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">file: src/safhpi.c
function: saHpiSensorEventEnablesSet
ln: 1027

set_sensor_eent_enables = res-&#62;handler-&#62;abi-
&#62;get_sensor_event_enables
should be changed to
set_sensor_eent_enables = res-&#62;handler-&#62;abi-
&#62;set_sensor_event_enables</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1057824931</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1057824931</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1057824931</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">751231</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Error on using sleep</field>
	<field name="open_date">1055148669</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">hs_001, hs_002, hs_401, hs_402.

sleep(1000) should be changed to sleep(1).</field>
	<field name="artifact_history">
<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1055148833</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">artifact_group_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1055148833</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">category_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1055148833</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1055148833</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1055148833</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1055148832</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">751230</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Error for auto_extract_timeout process</field>
	<field name="open_date">1055148577</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">File: hs_201, hs_202

saHpiAutoExtractTimeoutGet/Set(session_id, 
SAHPI_DOMAIN_CONTROLLER, ...)

SAHPI_DOMAIN_CONTROLLER should be changed to 
resource_id.

</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1055148784</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1055148784</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">773328</field>
	<field user_id="118691" name="submitted_by">tariqx</field>
	<field user_id="118691" name="assigned_to">tariqx</field>
	<field name="priority">1</field>
	<field name="status">Deleted</field>
	<field name="resolution">None</field>
	<field name="summary">list_resources program broken</field>
	<field name="open_date">1058483466</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Build System</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">I think the list_resources test program is broken since
we introduced glist.

Output:
*********************************************************************
tariq@sevenofnine:~/code/openhpi/examples$ ./list_resources

GLib-CRITICAL **: file gscanner.c: line 677
(g_scanner_input_file): assertion `input_fd &#62;= 0' failed.
config.c:395: Done processing conf file
safhpi.c:271: Invalid EntryId
discover_domain: Empty R
*********************************************************************
End output</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1060112605</field>
		<field name="user_name">tariqx</field>
		<field name="body">Logged In: YES 
user_id=118691

Yeah, it was my configuration that's broken.</field>
</message>

<message>
		<field name="adddate">1058516767</field>
		<field name="user_name">yzhuang</field>
		<field name="body">Logged In: YES 
user_id=48732

works for me.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060112605</field>
		<field name="mod_by">tariqx</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060112605</field>
		<field name="mod_by">tariqx</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">738612</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="100" name="assigned_to">nobody</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">None</field>
	<field name="summary">Error when finalize the HPI</field>
	<field name="open_date">1053053760</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">None</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">The both of the conformance test init/gf*  are failed.

The reason is that, 
saHpiFinalize function calls the domain_get ();
But just because no session open, there is no domain, 
and default domain is not on the domain list, so error is 
returned.
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1054185694</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1054185694</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">784022</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">eventlog get error.</field>
	<field name="open_date">1060159162</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">file: el_003.c
function: process_domain_eventlog
ln: 31

while (next_entry_id == SAHPI_NO_MORE_ENTRIES) -&#62;
while (prev_entry_id == SAHPI_NO_MORE_ENTRIES)

function: process_resource
ln: 64

while (next_entry_id == SAHPI_NO_MORE_ENTRIES) -&#62;
while (prev_entry_id == SAHPI_NO_MORE_ENTRIES)
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060159189</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060159189</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060159189</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">758984</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="48732" name="assigned_to">yzhuang</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Resource ID reduplicated.</field>
	<field name="open_date">1056331828</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Infrastructure</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Using examples/list_resources to get entry of IPMI.

There are two resource with the same resource ID 5.
</field>
	<field name="artifact_messages">
<message>
		<field name="adddate">1056334938</field>
		<field name="user_name">kxgao</field>
		<field name="body">Logged In: YES 
user_id=629363

It is an error in IPMI plug in.</field>
</message>
</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1056334938</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1056334938</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1056334938</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">765737</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">Init error about next_entry_id, in func el_003.c</field>
	<field name="open_date">1057291888</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">File: src/event_log_process/el_003.c

Func process_domain_eventlog
ln: 30

next_entry_id = SAHPI_NEWEST_ENTRY.
-&#62;prev_entry_id = SAHPI_NEWEST_ENTRY.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1057293315</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1057293315</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1057293315</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">776508</field>
	<field user_id="602195" name="submitted_by">arcress</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Fixed</field>
	<field name="summary">SIGSEGV in saHpiEventLogInfoGet</field>
	<field name="open_date">1058991409</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">IPMI plugin</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">Ran a test program to get the SEL records (hpisel).
It got SIGSEGV at safhpi.c:387 when calling 
saHpiEventLogInfoGet.

Here is the output:
hpisel: version 1.0
config.c:395: Done processing conf file
safhpi.c:119: Loaded plugin libipmi
safhpi.c:131: Loaded handler for plugin libipmi
RptInfo: UpdateCount = 0, UpdateTime = 0
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:60: New entity, add it
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
resource.c:128: New rdr, add it!
RptInfo/1: UpdateCount = 19, UpdateTime = d45b1440
rptentry[1] tag: memory_device

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 8192 (LWP 6759)]
0x00000000 in ?? ()
(gdb) bt
#0  0x00000000 in ?? ()
#1  0x40047669 in saHpiEventLogInfoGet (SessionId=1, 
ResourceId=1,
    Info=0xbffff8f0) at safhpi.c:387
#2  0x080490ef in main ()
#3  0x420158d4 in __libc_start_main () 
from /lib/i686/libc.so.6
(gdb)</field>
	<field name="artifact_history">
<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060159243</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060159243</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">assigned_to</field>
		<field name="old_value">100</field>
		<field name="entrydate">1059098326</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1059098326</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">File Added</field>
		<field name="old_value">56663: hpisel.c</field>
		<field name="entrydate">1058991412</field>
		<field name="mod_by">arcress</field>
</history>
</field>
</artifact>
<artifact>
	<field name="artifact_id">785190</field>
	<field user_id="629363" name="submitted_by">kxgao</field>
	<field user_id="629363" name="assigned_to">kxgao</field>
	<field name="priority">5</field>
	<field name="status">Closed</field>
	<field name="resolution">Duplicate</field>
	<field name="summary">Disable eventlog generate before add new eventlog entry</field>
	<field name="open_date">1060321286</field>
	<field name="artifact_type">Bugs</field>
	<field name="category">Conformance test suite</field>
	<field name="artifact_group_id">0.3</field>
	<field name="details">file: el_004
Because conformance test will get the newest entry 
after add a new entry. So before add entry eventlog 
should disable the set event log state.</field>
	<field name="artifact_history">
<history>
		<field name="field_name">resolution_id</field>
		<field name="old_value">100</field>
		<field name="entrydate">1060321384</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">close_date</field>
		<field name="old_value">0</field>
		<field name="entrydate">1060321384</field>
		<field name="mod_by">kxgao</field>
</history>

<history>
		<field name="field_name">status_id</field>
		<field name="old_value">1</field>
		<field name="entrydate">1060321384</field>
		<field name="mod_by">kxgao</field>
</history>
</field>
</artifact>
</artifacts>

<tasks>

</tasks>

<documents>
	<field name="groupname">Uncategorized Submissions</field>
	<field name="docid"></field>
	<field stateid="" name="stateid"></field>
	<field name="title"></field>
	<field name="data"></field>
	<field name="updatedate"></field>
	<field name="createdate"></field>
	<field user_id="" name="created_by"></field>
	<field doc_group="" name="doc_group"></field>
	<field name="description"></field>
	noresult: language_id

</documents>

<news>

</news>

</project_export>
