<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
    <title>The OpenHPI Project</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <meta name="keywords" content="hpi, sa, forum, service, availability, hardware, platform, interface, c, programming, language, open, source, abstraction, layer">
    <meta name="description" content="The OpenHPI Project, an open implementation of the SA Forum's HPI spec.">
    <link rel="stylesheet" href="openhpi.css" type="text/css">
</head>
<body>
    <div id="banner"><div><h1>The OpenHPI Project</h1><small>Open Hardware Platform Interface</small></div></div>
    <table><tr>
        <!--#include virtual="sidebar.html" -->
        <td id="maincolumn">
            <div class="mainsegment">
                <h3>Welcome</h3>
                <div>
                    OpenHPI is an open source project created with the intent of providing an implementation of the <a href="http://saforum.org">SA Forum</a>'s Hardware Platform Interface (HPI). HPI provides an abstracted interface to managing computer hardware, typically for chassis and rack based servers. HPI includes resource modeling; access to and control over sensor, control, watchdog, and inventory data associated with resources; abstracted System Event Log interfaces; hardware events and alerts; and a managed hotswap interface.
                    <p>OpenHPI provides a modular mechanism for adding new hardware and device support easily. Many plugins exist in the OpenHPI source tree to provide access to various types of hardware. This includes, but is not limited to, IPMI based servers, Blade Center, and machines which export data via sysfs. For up to date status on these components, please check out <a href="http://openhpi.sourceforge.net/status/">the status page</a>.
                    <p>The OpenHPI project is always looking for more participants. If you are interested in using OpenHPI, or taking a part in the evolution of OpenHPI, please <a href="http://lists.sourceforge.net/mailman/listinfo/openhpi-devel">join our mailing list</a> and <a href="mailto:openhpi-devel@lists.sourceforge.net">drop us a line</a>.
                </div>
            </div>
            <div class="mainsegment">
                <h3>News</h3>
  <h4>OpenHPI 1.9.3 Development Release (12/03/2004)</h4>
  <div>
      OpenHPI 1.9.3 has been released! This is the fourth and last development release before our major milestone release of OpenHPI 2.0 (stable) which happens towards the end of December. This release comes out with overall beta state support for the HPI B spec, the latest spec published by the SA Forum. Some features of note are:
      <ul>
          <li>Overall plugin support for HPI B spec (beta).</li>
   <li>HPI clients now ported to support HPI B spec.</li>
   <li>Alarm SA_APIs now implemented and in beta state.</li>
   <li>SNMP RSA plugin has been merged into the SNMP Blade Center plugin by sharing common code.</li>
   <li>Numerous bug fixes across the board, specially on the main plugins IPMI and BladeCenter/RSA (See changelog below for details).</li>   
      </ul>
      As always, everyone is invited to download the release and post any problems, questions, or suggestions about it to the OpenHPI mailing list (<a href="mailto:openhpi-devel@lists.sourceforge.net">openhpi-devel@lists.sf.net</a>).
      <pre>
Changes for 1.9.3
-------------------
New Features:
Blade Center Plugin
  1047990 - Automate generation of event hash tables code and headers
  1053998 - Port Control code to B.1.1 functionality
  1057773 - add GUID code to snmp_bc plugin
  1058474 - Add unit testing for control get and set.
  1069523 - Concentrate OID derivation/existance evil into 1 place
  983637 - Create BC and RSA plugin common code
HPI Clients
  971427 - port hpi clients to HPI B
HPI Utils
  1000237 - Rewrite epath utils to use new utilities
  1056872 - Create oh_valid_ctrl_state_mode() utility
  1056873 - Create oh_valid_addevent() utility
  1067480 - oh_encode_sensorreading - ignore anything before an '=' sign
OpenIPMI Plugin
  857166 - [SEL]Map IPMI Events to HPI events
Test Suites
  1012487 - HPI Conformance Test Creation for Ver 'B'

Fixed Bugs:
Blade Center Plugin
  1056874 - Return SNMP to HPI translated error codes from SNMP get/set
  1060520 - Modify bc plugin unit tests to work with libtool 1.5.x
  1062510 - Change dbg() to trace()
  1063207 - Fix bugs found  in unit tests, snmp_bc_control.c
  1065749 - Use plugin wraper for all snmp access.
  1067487 - Segfault snmp_bc discover events
Dummy plugin
  1054743 - Invalid error code saHpiResoruceResetStateSet
  1054805 - Invalid error code saHpiResoruceResetStateSet
HPI Clients
  1057934 - hpitree incorrect error message on inventory with 2 areas
HPI Utils
  1056938 - Remove BladeCenter-specific code from utils
OpenHPI base library
  1050972 - fix bugs found by gcc 3.4
  1054825 - saHpiEventAdd works with non-user event type
  1054829 - Event Conformance Tests failures
  1060480 - saHpiIdrInfoGet() returns NOT_PRESENT with bad params
  1060489 - saHpiResourceIdGet()  needs to check Invalid Params first
  1068286 - Freeing domain_table lock may cause bad things
  1069537 - Add handlers for Domain EventLogOverflowReset
  1071244 - Bad events created on rdr add/del
  1071757 - Call oh_event_init() after global parameters are set
  1071760 - process_resource_event() : missing call to oh_release_domain
  1071944 - Resource events generated by infra have no timestamp
OpenIPMI plugin
  1029028 - clean up ipmi close
  1034104 - Add action to non-BladeCenter plugins for setting event mask
  1036907 - Invalid error code return when call saHpiSensorReadingGet
  1040276 - Event in SEL not mapped to HPI
  1047503 - OPENHPI_DEBUG influence ohoi_get_sel_support_del
  1055863 - get_reset_state not implemented
  1077934 - some entity tags have zero length
  957521 - ohoi_get_indicator_state timeout
  968520 - saHpiEventLogClear hangs up when deleteing mc eventlog
Test Suites
  1037157 - saHpiResourceSeveritySet not checking for valid SessionId
  1037349 - Build Break: saHpiEventLogOverflowReset
  1037838 - Test returns bad return code 2
  1037841 - Test fails in Function Return analysis
  1037846 - Comments in code is needed
  1054847 - conf test failures Params not set correctly
  1058381 - add more saf time tests
  1064520 - SaHpiEventAdd Bad SessionID returns InvalidParams
  1064529 - saHpiIdrInfoGet allowed to return SA_ERR_HPI_NOT_PRESENT
  1065364 - Watchdog Timer tests must test for specific errors
      </pre>
  </div>
                <h4>OpenHPI 1.9.2 Development Release (11/02/2004)</h4>
                <div>
                    Once again, the OpenHpi team is back with another release. OpenHPI 1.9.2, the third development release of the OpenHPI library since 1.9.0 supporting the HPI B.01.01 spec and on the way to the next stable version 2.0.0.
                    <p>Being a development release, various library components are only partially working. The plugins which are known to work are dummy, ipmi, sysfs, watchdog and snmp_bc. More unit tests have been added and numerous bugs have been fixed and features closed. See the changelog below for details. At the base library level, a couple of enhancements of note are:
                    <ul>
                        <li><b>Improved dynamic configuration interface</b> - No need to open a session with saHpiSessionOpen to use this interface now. The library now has much better self-initialization logic to handler this.</li>
                        <li><b>Updated resource presence table utilities</b> - Correct handling of instrument id numbers in sensor RDRs according to the HPI B spec. This goes to enforce the limitations on the sensor instrument id numbers because of reserved id ranges in the new spec.</li>
                    </ul>
                    We invite everyone to download this new release and share your experiences with us. Voice any questions, problems, or suggestions on the OpenHPI mailing list (<a href="mailto:openhpi-devel@lists.sourceforge.net">openhpi-devel@lists.sf.net</a>).
                    <pre>
Changes for 1.9.2
-------------------
New Features:
Blade Center Plugin
  1041132 - Externalize functions in snmp_bc.c
  1041134 - Unit tests for functions in snmp_bc.c using simulator
  1041832 - EventLog Overflow flag management
  1041948 - Unit testing snmp_bc sensor functions
  1045030 - Unit tests for bc sensor threshold functions
  1046475 - Support BCT Chassis Health OID
  1047984 - Do discovery when resources added/removed
  1047985 - Support user defined resource severity
  1047993 - Remove MM temp sensor on chassis
  1048990 - Unit tests for bc Event Log functions
  1049381 - Unit tests for bc Idr functions
  1050882 - Add unit tests for bc hotswap functions
  1051226 - Add unit tests for bc time get/set functions
  1051714 - Support Setting resource failed flag for unexpected failures
  1052828 - rename bc_sel_entry struct to remove bc_
  1053357 - Add unit tests for bc discover
  1053373 - Port hotswap to B.1.1 functionality
  1053470 - Port power code to B.1.1
  1053471 - Port reset code to B.1.1
  983557 - Create utility to convert BC UUIDs to HPI GUIDs
  983632 - Port BladeCenter event code to B.1.1 funtionality
HPI Utils
  1002770 - Create new utilites to print Control Records
  1015507 - Create utilities to print SaHpiEventT
  1031029 - oh_append_data is added
  1032845 - Create oh_valid_textbuffer()
  1047838 - Change snmp_derive_oid to take pointer to entity path
  1051721 - rename snmp_derive_objid and make as a standard utility
  1052324 - Add print support for event optional sensor data
  1053035 - Create oh_compare_sensorreading function
  1053043 - Turn off tracing by default in rt-env.sh
  979338 - Port printevent utilities to HPI B
OpenHPI Daemon
  969543 - port marshal types to HPI B
OpenHPI base library
  1020228 - sensor event masks
  1023448 - change get_sensor_data to get_sensor_reading
  1038784 - Use oHpi without opening a session.
  1053436 - Eliminate getenv calls. Use global_param interface instead.
  880143 - create test plan for epath_utils
OpenIPMI Plugin
  1020107 - sensor event enable
  1021678 - sensor data format
  1023477 - support reading and event state
  1024098 - add sensor event mask feature
  1025522 - add inventory feature
  1028325 - enhancement for event sensor enable and mask
Web Site
  1046602 - Write nice stylesheet for website

Fixed Bugs:
Blade Center Plugin
  1042695 - BEAM report: enhance snmp_bc_inventory.c
  1043671 - Make returncode consistent, SA_ERR_HPI_INVALID_RESOURCE
  1046624 - Xlate bc 'No temperature' &amp; 'No voltage' to HPI_ERR_BUSY
  1046627 - Translate snmp error codes to hpi error code
  1048117 - Fix snmp_bc_sensor.c problems found during unit testing
  1048991 - Fix bc_sel problems found with unit tests.
  1049392 - Fix BEAM complaint of CHECK_END macro
  1050912 - Fix bugs found during bc hotswap unit tests
  1051744 - Remove +- 1 from hysteresis calculations
  1053359 - Fix problems in bc discover found with unit tests.
  1053740 - Fix problems in unit tests with new snmp_bc_hotswap.c code
  1053770 - build fails, snmp_bc_utils.c:36, gcc 3.3.3
HPI Utils
  1028331 - Unit tests for rpt, rdr struct_utils
  1037154 - saHpiEventLog* return OK when they shouldn't
  1041127 - cvs head: build fails - rpt_utils.c:68 warning message
  1046383 - oh_encode_sensorreading - return 0 for non-numeric string
  1050066 - 64-bit: make distcheck fails
  1051713 - Add generated utility files to make clean
OpenHPI base library
  1018837 - maybe lt_dlclose handler when error is in static plugin
  1029077 - Fail to export saHpiSensorEnableGet and saHpiSensorEnableSet
  1036723 - DomainTagSet errors
  1037146 - DRT functions return UNSUPPORTED
  1038742 - saHpiSessionOpen vulnerable to failed initialization
  1045353 - Use trace for informational message in Idr func
  1058398 - oHpiPluginInfo can deadlock
  969316 - minimum instrument numbers
  971373 - rpt utils updates counter even if no change occured
  987692 - process_hotswap_policy do nothing
OpenIPMI plugin
  1025627 - a series of bugs
  1031032 - bugs in event log
  1032380 - clean up source code
  1033805 - segfault when rptentry is null in sensor_threshold_event
  1035458 - fix several bugs in sensor
  1036793 - Incorrect error code when calling saHpiSensorThresholdsGet
  1036820 - Fail to set sensor event mask
  1036872 - event enable and mask can be set when sensor disable
  1054347 - HPI Reset won't work over LAN interface
  1054348 - set_power_state abi limited to POWER_OFF
  957525 - get_power_state abi is not implemented
  957530 - get_reset_state is not implemented
SNMP Agent
  931272 - More Approprite PDU respone data
  948572 - openhpi-subagent configure needs to check for bzip2-devel
Sysfs plugin
  1011908 - change sprintf to snprintf &amp; delete timeout in get_event
Test Suites
  1050985 - saHpiIdrFieldGet_T8.test loops forever
                    </pre>
                </div>
              <h4>OpenHPI 1.9.1 Development Release (10/08/2004)</h4>
              <div>
                The OpenHPI Team is proud to announce the release OpenHPI 1.9.1, the
                second development release supporting the HPI B.01.01 spec. This
                development release includes the major new feature of a dynamic
                configure interface. This allows client applications to load plugins
                dynamically during run time, as well as open and close hardware
                connections (handlers) on demand. This interface is still evolving,
                and full documentation will be available soon.
                <p>
                  As this is a development release, many of the components of the OpenHPI tree
                  are in only partially working states. Five plugins are functioning with the
                  new interfaces (dummy, ipmi, sysfs, watchdog, and snmp_bc), and some of the
                  clients have been ported. The OpenHPI daemon, and SNMP subagent are still in
                  process.
                <p>
                  As always, feedback is highly valued. Please post
                  questions and comments to <a
                  href="mailto:openhpi-devel@lists.sf.net">openhpi-devel@lists.sf.net</a>.
                  The complete release notes follow:
                  <pre>
Changes for 1.9.1
-------------------
New Features:
Blade Center Plugin
  1041525 - Port Event Log code to B.1.1 functionality
  1041526 - Port hotplug support to B.1.1 structures
  1041529 - Port watchdog code to B.1.1 functionality
  1041530 - Port event code to B.1.1 structures
  1041532 - Port sensor code to B.1.1 structures
  1041533 - Port control code to B.1.1 structures
  1041536 - Port inventory code to B.1.1 functions
Dummy Plugin
  898163 - add resource SEL to dummy plugin
HPI Clients
  998333 - Cleanup clients to use new utilities
OpenHPI base library
  1011045 - Enable run-time configuration of library
OpenIPMI Plugin
  1036825 - add sensor range
Sysfs Plugin
  1024208 - change get_sensor_data to get_sensor_reading

Fixed Bugs:
Blade Center Plugin
  1020758 - blade center sim tests fail in distcheck
  1023036 - Cleanup snmp_bc_snmp_get()/snmp_bc_snmp_set() interfaces
  1025911 - Same IdrId for resource of same type
Build System
  1021700 - need twice ./Bigbuild.infra
  1035542 - define HAVE_SSIZE_T needed in config.h
  1036712 - build errors on ia64 - sahp_struct_utils
Dummy plugin
  1023746 - Use new sensor_get_reading abi name
HPI Clients
  1029044 - countFields is not initialized
HPI Utils
  1020749 - sahpi_struct_utils_test fails
OpenHPI base library
  1020643 - Not getting historical rpt/rdr entries from plugins
  1021586 - support unspecified domain id in event process
  1034097 - Add action to SaHpiSensorEventMasksSet to plugin interface
  1037174 - saHpiRptEntryGet returns wrong error codes
  1037190 - saHpiUnsubscribe doesn't work
  1037194 - test saHpiSessionOpen_T4 segfaults
  1037854 - distcheck fails  1.9.1 branch (& cvs head), FAIL: ohpi_035
  927917 - check for ignore on sensor functions
OpenIPMI plugin
  1022890 - timeout make peformance decline
  1031702 - Segment Fault when get sensor reading
  1035961 - Fail to get sensor event mask

                </pre>
                </div>



                <h4>OpenHPI 1.9.0 Development Release Posted! (09/08/2004)</h4>
                <div>
                    The OpenHPI team is pleased to announce the release of OpenHPI 1.9.0, the first development release on the road towards OpenHPI 2.0.0. The release can be downloaded from the OpenHPI project site.
                    <p>This release includes the following major feature changes:
                    <ul>
                        <li><b>Support for HPI B.01.01 interface:</b> OpenHPI 1.9.0 now users the HPI B.01.01 interface. As this is not compatible with HPI A.01.01, applications will need to be ported to HPI B in order to work with future versions of OpenHPI. (Note: not all HPI B functions are fully working at this time)</li>
                        <li><b>Threaded Mode:</b> OpenHPI can now be run in a threaded mode by setting OPENHPI_THREADED=YES in the environment before launching an application. This will create an event thread, which will monitor handlers for events, providing a more real time access to information in certain scenarios.</li>
                        <li><b>Much more granular locking:</b> The core OpenHPI library now uses much more granular locking of data structures to ensure thread safety. This should provide greater performance, and allow for reentrant calls to plugins. (Note: with this plugins must now ensure their own thread safety, as OpenHPI doesn't provide it for them.)</li>
                        <li><b>HPI Utilities:</b> A much richer set of HPI Data utilities has been added to the OpenHPI utils library. This includes conversion to string of nearly every defined and enumerated type in HPI B.01.01 as well as numerous validation routines.</li>
                        <li><b>Full Event Storage:</b> Any event or eventlog entry now has any associated Resource or RDRs stored with it as well. This ensures a consistent view of events and their resources during hotswap scenarios.</li>
                    </ul>
                    <p>As this is a development release, many of the components of the OpenHPI tree are in only partially working states. Three plugins are functioning with the new interfaces (dummy, ipmi, and snmp_bc), and some of the clients have been ported. The OpenHPI daemon, and SNMP subagent are still in process, hopefully ready by OpenHPI 1.9.1 (due the end of Sept).
                    <p> As always, feedback is highly valued. Please post questions and comments to <a href="mailto:openhpi-devel@lists.sourceforge.net">openhpi-devel@lists.sf.net</a>
                    <p>The complete feature/bug list for OpenHPI 1.9.0 follows:
                    <pre>
    changes for 1.9.0
    -------------------
    new features:
    blade center plugin
    927860 - test sensor/control using static simulator
    969995 - add capability reset &amp; power to blades
    971430 - add inventory support to blade center plugin
    978458 - add openhpi_debug to rt-env.sh
    build system
    983722 - change environment variable names to start with "openhpi_"
    dummy plugin
    971429 - add inventory support to dummy plugin
    hpi clients
    1009755 - create a new client: hpitree to display hpi resources
    hpi utils
    1000849 - delete utils/sensor_utils.c and h
    1000852 - consolidate timer utilities
    1002627 - create print utility to print sensor rec data
    1002754 - util to print idr structures
    1002766 - rename oh_print_textbuffer and oh_fprint_textbuffer
    1003013 - add oh_print_textbuffer and oh_fprint_textbuffer
    1004864 - create oh_encode_sensorreading utility
    1006175 - move snmp_derive_objid from bc plugin to snmp utilities
    1011902 - change snmp_util.c and h to snmp_utils.c and h
    991861 - add locking mechanism to uid utils
    993011 - port unit test fo utilities to hpi b
    999645 - add decode functions to translate str back into hpi enums
    none
    986326 - change struct oh_sel to oh_el
    openhpi base library
    1012640 - break up openhpi.h and add lock in hotswap.c
    1018931 - add sensor event mask function in abi
    1020194 - get and set sensor enable
    858012 - use glib2.0 instead of glib1.2
    884723 - create standard session / domain structures
    909977 - sensor raw values not needed
    927848 - take get_self_id out of plugin interface
    969539 - create safstrings.h
    971428 - add support for inventory to infrastructure
    975383 - store resource and rdr full structures in sel
    983114 - include rptentry and rdr in the event log.
    992662 - separate sahpiinitialize and sahpifinalize from safhpi.c
    996053 - compliler warning idr-related functions in safhpi.c
    openipmi plugin
    978737 - successfully compile ipmi plugin with hpi 1.1 header file
    snmp agent
    860527 - event traps 'add' &amp; 'remove' resource  required by c
    test suites
    1007446 - hpi b conf test documentation
    991139 - create a new test tree for hpi b 1.01

    fixed bugs:
    blade center plugin
    1015692 - bc and rsa simulators segfaulted with new idr's
    build system
    992572 - oh_plugin_path should be generated in config.h
    dummy plugin
    983063 - adjust dummy control prototypes
    hpi clients
    992133 - compiler warnings in clients directory
    hpi utils
    1002038 - store full resource and rdr with el entry
    1004035 - enhance sahpi_time_utils
    1006856 - update domaininfo from rptable
    openhpi base library
    1000779 - remove rpt ref from get_event
    1000780 - check domain validity on event loop
    1009745 - oh_init_state should be initialized
    1024094 - mutiple return in sahpisensoreventmasksset
    969289 - sel_utils add function needs to take eventt
    977008 - rework event loop
    977670 - event_queue should be gasyncqueue type
    979365 - warning thrown for lock.c
    979387 - sahpiinitilize function defined incorrectly
    979392 - plugin abi add_sel_entry needs to get an eventt
    998258 - sahpi2code.pl needs to run with use strict
    openipmi plugin
    1005801 - change mode parameter in ohoi_set_control_state
    1011916 - delete timeout in get_event
    1021696 - assign rdr's parent in oh_event
    watchdog plugin
    1015843 - sync get_event with infrastructure
                    </pre>
                </div>
                <h4>OpenHPI 1.0.0 Stable Released! (06/30/2004)</h4>
                <div>
                    After a long year of development the OpenHPI Team is proud to announce the release of OpenHPI 1.0.0.  This release provides support for the SA Forum HPI A.1.1 specification.  OpenHPI 1.0.0 is available in source format from <a href="https://sourceforge.net/project/showfiles.php?group_id=71730">the SourceForge file repository</a>.  Binary RPMs for numerous platforms will be made available in the
                    coming weeks.
                    <p>OpenHPI 1.0.0 supports the following hardware:
                    <ul>
                        <li>IPMI based servers and blades (via OpenIPMI or IPMIDirect plugins)</li>
                        <li>IBM Blade Center (via SNMP Blade Center plugin)</li>
                        <li>IBM xSeries servers (via SNMP RSA plugin)</li>
                        <li>Linux 2.4 & 2.6 watchdog devices (via watchdog plugin)</li>
                        <li>Linux 2.6 systems (via sysfs plugin)</li>
                        <li>A Dummy Plugin designed for testing and writing HPI applications</li>
                    </ul>
                    The release contains a number of sample command line utilities as example usage of the hpi interface.
                    These include:
                    <ul>
                        <li>hpisensor - displays live readings of all sensors discovered</li>
                        <li>hpiinv - displays inventory data for all resources which support it</li>
                        <li>hpisel - fetches and displays event logs for all resources in the system</li>
                        <li>hpipower/hpireset - power cycle or reset resources in the hpi instance</li>
                    </ul>
                    Along with the release there is a companion SNMP subagent (provided separately) which provides an SNMP interface to the OpenHPI library.  This allows users of SNMP client software to gain access to HPI information quickly and easily.
                    <p>There is also an experimental HPI Daemon included with the release. The HPI Daemon is a user of the OpenHPI library that provides HPI as a system service.  Client applications can link to  libopenhpiclient which will transparently connect them to the HPI Daemon.
                    <p>A complete change list of everything since 0.9 follows:
                    <pre>
Changes for 1.0.0
-------------------
New Features:
Build System
  953747 - rpm installation defaultly includes ipmi-plugin configuratio
IPMI Direct plugin
  938011 - refactoring of reading inventory data
OpenIPMI Plugin
  942029 - add test tool set to ipmi plugin
  952885 - IPMI Plug-in performance enhancement
  953322 - investigate on threshold event failure in some sensor
  953324 - investigate on threshold event failure on Lan interface
RSA Plugin
  934306 - Create Unit Tests for RSA Plugin
SNMP Client plugin
  931903 - Enable abi sensor functions
Test Suites
  938099 - HPITEST - Conformance Tests for Errors

Fixed Bugs:
Blade Center Plugin
  942692 - BC Power Reset and Set generates Errors
  951569 - hpitest Setting Event Log State Fails
  954279 - entity_inventory_data conformance test fail
  961800 - return SA_ERR_HPI_BUSY if snmp times out
  965268 - interpret dates better
  965297 - fix false detection of daughter cards
  966718 - Conformance tests - Add events fail
  977729 - BladeCenter doesn't support Blade Identity LED
Build System
  924029 - Makefile in examples ignores the --sysconfdir
  968511 - --enable-debug not being used anymore
Documentation
  927550 - scrub manual for typos
HPI Clients
  976775 - hpiinv is no reporting inventory data correctly.
HPI Utils
  925518 - Move Sensor utils to utils/ lib
  969633 - No absolute timestamp supported in sel utils
IPMI Direct plugin
  919410 - sensor SetEventEnables is buggy
  953173 - compilation error in ipmi_sensor.cpp
  962488 - IPMIDirect Aborts with list_resources
None
  943669 - make check fails at marshal_***, 0..7beta snapshot
OpenHPI base library
  919458 - auto inservtion/extraction only works when timeout is 0
  944799 - Dynamically turn on/off debugging
  965773 - blocking timeout doesn't seem to work
  969212 - rpm dependency errors
  969705 - Set default DEL severity to minor
  974839 - clean rules broken all over the place
  976994 - change OHDEBUG -> OPENHPI_DEBUG
OpenIPMI plugin
  947896 - AdvancedTCA entity string "invalid"
  954105 - some valid sensor readings return error
  957580 - set_resource_tag abi is not implemented
  959749 - hpithres returns -1006 from ThresholdsGet
  959753 - No Inventory RDRs are populated
  965422 - use ipmi_fru_get_xx instead of ipmi_entity_get_xxx
  968522 - empty Resource Tag
  969022 - warning message in fetching  fru
  969042 - control state is not correctly set
  969076 - PosThdHysteresis and NegThdHysteresis is not correctly set
  969093 - sensor discrete event is not populated to HPI
  981666 - OpenIPMI 1.3.9 suggested
Test Suites
  914909 - test hs_001
  950172 - HPI Conformance Test: error valid
  965411 - Conformance driver does not handle segfault, remove tests
  965936 - Two conformance sensor_threshold tests return NA?
  979327 - Conformance Test does not restore Time

                    </pre>
                    Questions, Comments, or Bugs should be sent to the OpenHPI development mailing list (openhpi-devel at
                    sourceforge dot net).
                    <p>With OpenHPI 1.0.0 released, the OpenHPI team is now fully focusing on the new HPI B.1.1  specification. Expect to see new development releases in the near future.
                    <p>OpenHPI 1.0.0 was produced by the efforts of a large number of individuals, without whom we could have never accomplished such a quality implementation is such a short window of time. The following people directly contributed to the success of this project (if someone was left off the list, we are very sorry, and please speak up on openhpi-devel).
                    <ul>
                        <li>David Ashley</li>
                        <li>Jean-Michel Audet</li>
                        <li>Andrea Brugger</li>
                        <li>Chris Chia</li>
                        <li>Andy Cress</li>
                        <li>Sean Dague</li>
                        <li>Julie Fleischer</li>
                        <li>Kevin Gao</li>
                        <li>David Judkovics</li>
                        <li>Thomas Kanngieser</li>
                        <li>James P. Ketrenos</li>
                        <li>Rusty Lynch</li>
                        <li>Carl McAdams</li>
                        <li>Renier Morales</li>
                        <li>Guo Ruijing</li>
                        <li>Konrad Rzeszutek</li>
                        <li>Peter D Phan</li>
                        <li>Pierre Sangouard</li>
                        <li>Steve Sherman</li>
                        <li>Tariq Shureih</li>
                        <li>Armin Stauber</li>
                        <li>Bill Swortwood</li>
                        <li>Louis Yan Zhuang</li>
                        <li>Serge Zhukov</li>
                    </ul>
                    Thanks again to everyone that made this a success. Watch for OpenHPI 2.0 (electric bugallow)      coming to a theater near you soon. :)
                </div>
            </div>
            <b>For questions or comments, please <a href="mailto:openhpi-devel@lists.sourceforge.net">email the openhpi developers</a>.</b>
            <p>You can also contact <a href="mailt:sean@dague.net">Sean Dague</a> or <a href="mailt:tariq@linux.intel.com">Tariq Shureih</a>.
            <br>Last modified: Wed Sep  8 16:44:53 EDT 2004
        </td>
    </tr></table>
</body>
</html>
